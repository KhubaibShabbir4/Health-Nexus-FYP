generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model patients_signup {
  patient_id       Int    @id @default(autoincrement())
  patient_name     String
  patient_email    String @unique
  password         String
  email            String
  phone            String
  cnic             String
  address          String
  city             String
  gender           String
  time_slot        String
  appointment_date String
}

model PatientLogin {
  patient_id                 Int       @id @default(autoincrement())
  full_name                  String
  gender                     String
  dob                        DateTime
  email                      String    @unique
  phone                      String?
  cnic                       String?
  cnic_expiry                DateTime?
  address                    String?
  city                       String?
  province                   String?
  country                    String?
  medical_condition          String
  current_medications        String?
  allergies                  String?
  prescription_file          String?
  health_reports             String?
  financial_support          String
  monthly_income             String?
  occupation                 String?
  dependents                 Int?
  financial_proof            String?
  emergency_contact_name     String
  emergency_contact_relation String
  emergency_contact_phone    String
  preferred_ngo              String?
  preferred_city             String?
  password_hash              String
  created_at                 DateTime  @default(now())
  updated_at                 DateTime  @updatedAt
}

model loan {
  id              Int      @id @default(autoincrement())
  amountPaid      Float
  amountRemaining Float
  Ngo             String
  user_id         Int
  createdAt       DateTime @default(now())
}

model Case {
  id              Int      @id @default(autoincrement())
  caseId          String   @unique
  patientName     String
  requestedAmount Float
  requestDate     DateTime
  status          String
  actions         String
}

model FundsTransfer {
  id        Int      @id @default(autoincrement())
  category  String
  month     String
  amount    Float
  createdAt DateTime @default(now())
  user_id   Int
}

model Status {
  id     Int    @id @default(autoincrement())
  status String
}

model Funds {
  id     Int    @id @default(autoincrement())
  month  String
  amount Float
}

model CaseStatus {
  id                 Int     @id @default(autoincrement())
  patientName        String
  age                Int
  gender             String
  diagnosis          String
  treatment          String
  status             String
  dosage             String?
  prescribedMedicine String?
}

model GigDetails {
  id          Int      @id @default(autoincrement())
  gigAmount   Int
  caseId      Int
  patientName String
  createdAt   DateTime @default(now())
}

model patients {
  patient_id          Int                  @id @default(autoincrement())
  patient_name        String
  email               String
  gender              String
  time_slot           String
  appointment_date    String
  pendingAppointments PendingAppointment[]
}

model PendingAppointment {
  id               Int      @id @default(autoincrement())
  patient_id       Int
  patient_name     String
  appointment_id   String   @unique
  appointment_date String
  status           String
  patient          patients @relation(fields: [patient_id], references: [patient_id])
}

model ratings {
  id             Int @id @default(autoincrement())
  satisfaction   Int
  diagnosis      Int
  staffBehaviour Int
  environment    Int
}

model Appointment {
  id            Int      @id @default(autoincrement())
  name          String
  date          DateTime
  status        String   @default("Pending")
  appointmentId String
  doctor_id     Int?
  reason        String?
  time          String
  user_id       Int
}

model Admin {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  dob       DateTime
  email     String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
}

model AidRequest {
  id            Int      @id @default(autoincrement())
  patientId     Int
  patientName   String
  medicineName  String
  requestStatus String
  ngoName       String?
  response      String?
  createdAt     DateTime @default(now())
}

model Medication {
  id         Int      @id @default(autoincrement())
  name       String
  stock      Int
  total      Int
  dosageTime String
  createdAt  DateTime @default(now())
}

model Prescription {
  id                Int      @id @default(autoincrement())
  user_id           Int
  Medicines         String
  Tests             String
  Operations        String
  ExtraInstructions String
  createdAt         DateTime @default(now())
}

model AssistanceRequest {
  id                Int            @id @default(autoincrement())
  fullName          String
  cnic              String         @unique
  contact           String
  medicalCondition  String
  assistanceType    AssistanceType
  medicalReport     String?
  additionalMessage String?
  totalExpenditure  Int?
  selfFinance       Int?
  ngoAmount         Int?
  createdAt         DateTime       @default(now())
  user_id           Int
  Reason            String?
  Status            String?        @default("pending")
}

model Doctor {
  id             Int      @id @default(autoincrement())
  firstName      String
  lastName       String
  dob            DateTime
  email          String   @unique
  password       String
  specialization String
  licenseNumber  String   @unique
  experience     Int
  role           String   @default("doctor")
  createdAt      DateTime @default(now())
}

model NGO {
  id                 Int      @id @default(autoincrement())
  name               String
  email              String   @unique
  password           String
  registrationNumber String   @unique
  phone              String
  address            String
  mission            String
  role               String   @default("ngo")
  createdAt          DateTime @default(now())
}

model Pharmacy {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  password      String
  licenseNumber String   @unique
  phone         String
  address       String
  services      String
  role          String   @default("pharmacy")
  createdAt     DateTime @default(now())
}

model manageAccount {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  role      String   @default("user")
  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum AssistanceType {
  FINANCIAL_AID
  MEDICATION
  CONSULTATION
}

enum PreferredNGO {
  AL_KHIDMAT
  EDHI_FOUNDATION
  SHAUKAT_KHANUM
  SAYLANI_WELFARE
}
